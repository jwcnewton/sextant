import {
  SextantFeatures,
  SextantEventByFeature,
} from './sextant-types.generated';

export interface SextantTestFeatureContext<
  IFeature extends keyof SextantFeatures,
  IScenarioName extends string
> {
  test: SextantTest<IScenarioName>;
  /**
   * Test whether all scenarios have been tested
   */
  testCoverage: () => void;
  mockEvent: <IType extends keyof SextantFeatures[IFeature]['events']>(
    type: IType,
    event?: Omit<Partial<SextantEventByFeature<IFeature, IType>>, 'type'>
  ) => SextantEventByFeature<IFeature, IType>;
}

export interface SextantTest<IScenarioName extends string> {
  (name: IScenarioName, fn?: jest.ProvidesCallback, timeout?: number): void;
}

/**
 * Describe a feature of Sextant in a jest describe block
 */
export function describeSextantFeature<IFeature extends keyof SextantFeatures>(
  featureName: IFeature,
  testFunc: (
    testContext: SextantTestFeatureContext<
      IFeature,
      SextantFeatures[IFeature]['scenarios']
    >,
  ) => void,
): void;
